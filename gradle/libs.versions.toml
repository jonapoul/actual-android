[versions]
# Plugins
agp = "8.12.1"
androidCacheFix = "3.0.1"
blueprint = "1.0.0"
buildconfig = "5.6.7"
burst = "2.6.0"
catalog = "0.4.0"
compose = "1.9.0-beta03"
composeHotReload = "1.0.0-beta06"
dependencyGuard = "0.5.0"
dependencyVersions = "0.52.0"
detekt = "1.23.8"
doctor = "0.12.0"
jacoco = "0.8.13"
kotlin = "2.2.10"
kover = "0.9.1"
ksp = "2.2.10-2.0.2"
licensee = "1.13.0"
manifestLock = "1.3.5"
metro = "0.6.3"
molecule = "2.1.0"
redacted = "1.14.1"

# Libraries
alakazam = "6.2.0"
android-desugaring = "2.1.5"
androidx-activity = "1.10.1"
androidx-annotation = "1.9.1"
androidx-compose-lint = "1.4.2"
androidx-compose-rules = "0.4.27"
androidx-coreKtx = "1.17.0"
androidx-crypto = "1.1.0"
androidx-lifecycle = "2.9.3"
androidx-preference = "1.2.1"
androidx-splash = "1.0.1"
coil = "2.7.0"
haze = "1.6.10"
kotlinpoet = "2.2.0"
kotlinx-coroutines = "1.10.2"
kotlinx-datetime = "0.7.1"
kotlinx-immutable = "0.4.0"
kotlinx-serialization = "1.9.0"
ktor = "3.2.3"
logback-android = "3.0.0"
logback-classic = "1.5.18"
logcat = "0.4"
markdown = "0.35.0"
material = "1.12.0"
okio = "3.16.0"
preferences = "2.2.0"
slf4j = "2.0.17"
sqldelight = "2.1.0"
vico = "2.1.3"

# Testing
test-androidx-arch = "2.2.0"
test-androidx-coreKtx = "1.7.0"
test-androidx-junit = "1.3.0"
test-androidx-monitor = "1.8.0"
test-androidx-rules = "1.7.0"
test-androidx-runner = "1.7.0"
test-junit = "4.13.2"
test-mockk = "1.14.5"
test-robolectric = "4.16"
test-turbine = "1.2.1"

[libraries]
# Plugins
plugin-agp = { module = "com.android.tools.build:gradle", version.ref = "agp" }
plugin-androidCacheFix = { module = "org.gradle.android.cache-fix:org.gradle.android.cache-fix.gradle.plugin", version.ref = "androidCacheFix" }
plugin-blueprint-core = { module = "dev.jonpoulton.blueprint:core", version.ref = "blueprint" }
plugin-blueprint-recipes = { module = "dev.jonpoulton.blueprint:recipes", version.ref = "blueprint" }
plugin-burst = { module = "app.cash.burst:burst-gradle-plugin", version.ref = "burst" }
plugin-compose = { module = "org.jetbrains.compose:org.jetbrains.compose.gradle.plugin", version.ref = "compose" }
plugin-composeHotReload = { module = "org.jetbrains.compose.hot-reload:hot-reload-gradle-plugin", version.ref = "composeHotReload" }
plugin-detekt = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }
plugin-detektCompose = { module = "io.nlopez.compose.rules:detekt", version.ref = "androidx-compose-rules" }
plugin-jacoco = { module = "org.jacoco:org.jacoco.core", version.ref = "jacoco" }
plugin-kotlin-compose = { module = "org.jetbrains.kotlin.plugin.compose:org.jetbrains.kotlin.plugin.compose.gradle.plugin", version.ref = "kotlin" }
plugin-kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
plugin-kotlin-powerAssert = { module = "org.jetbrains.kotlin:kotlin-power-assert", version.ref = "kotlin" }
plugin-kover = { module = "org.jetbrains.kotlinx:kover-gradle-plugin", version.ref = "kover" }
plugin-ksp = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
plugin-licensee = { module = "app.cash.licensee:licensee-gradle-plugin", version.ref = "licensee" }
plugin-metro = { module = "dev.zacsweers.metro:dev.zacsweers.metro.gradle.plugin", version.ref = "metro" }

# Libraries
alakazam-db-sqldelight = { module = "dev.jonpoulton.alakazam:db-sqldelight", version.ref = "alakazam" }
alakazam-kotlin-compose = { module = "dev.jonpoulton.alakazam:kotlin-compose", version.ref = "alakazam" }
alakazam-kotlin-composeAnnotations = { module = "dev.jonpoulton.alakazam:kotlin-compose-annotations", version.ref = "alakazam" }
alakazam-kotlin-core = { module = "dev.jonpoulton.alakazam:kotlin-core", version.ref = "alakazam" }
alakazam-kotlin-serialization = { module = "dev.jonpoulton.alakazam:kotlin-serialization", version.ref = "alakazam" }
alakazam-kotlin-time = { module = "dev.jonpoulton.alakazam:kotlin-time", version.ref = "alakazam" }
android-desugaring = { module = "com.android.tools:desugar_jdk_libs", version.ref = "android-desugaring" }
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activity" }
androidx-activity-core = { module = "androidx.activity:activity", version.ref = "androidx-activity" }
androidx-activity-ktx = { module = "androidx.activity:activity-ktx", version.ref = "androidx-activity" }
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }
androidx-compose-lint = { module = "com.slack.lint.compose:compose-lint-checks", version.ref = "androidx-compose-lint" }
androidx-coreKtx = { module = "androidx.core:core-ktx", version.ref = "androidx-coreKtx" }
androidx-crypto = { module = "androidx.security:security-crypto", version.ref = "androidx-crypto" }
androidx-lifecycle-runtime-compose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-compose = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-core = { module = "androidx.lifecycle:lifecycle-viewmodel", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-ktx = { module = "androidx.lifecycle:lifecycle-viewmodel-ktx", version.ref = "androidx-lifecycle" }
androidx-lifecycle-viewmodel-savedstate = { module = "androidx.lifecycle:lifecycle-viewmodel-savedstate", version.ref = "androidx-lifecycle" }
androidx-preference-ktx = { module = "androidx.preference:preference-ktx", version.ref = "androidx-preference" }
androidx-splash = { module = "androidx.core:core-splashscreen", version.ref = "androidx-splash" }
haze-core = { module = "dev.chrisbanes.haze:haze", version.ref = "haze" }
jetbrains-navigation = { module = "org.jetbrains.androidx.navigation:navigation-compose", version = "2.9.0-rc01" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlinpoet-core = { module = "com.squareup:kotlinpoet", version.ref = "kotlinpoet" }
kotlinpoet-ksp = { module = "com.squareup:kotlinpoet-ksp", version.ref = "kotlinpoet" }
kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-immutable = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx-immutable" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
ksp-api = { module = "com.google.devtools.ksp:symbol-processing-api", version.ref = "ksp" }
ktor-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization-core = { module = "io.ktor:ktor-serialization", version.ref = "ktor" }
ktor-serialization-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
logback-android = { module = "com.github.tony19:logback-android", version.ref = "logback-android" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback-classic" }
logcat = { module = "com.squareup.logcat:logcat", version.ref = "logcat" }
markdown-core = { module = "com.mikepenz:multiplatform-markdown-renderer", version.ref = "markdown" }
markdown-m3 = { module = "com.mikepenz:multiplatform-markdown-renderer-m3", version.ref = "markdown" }
material = { module = "com.google.android.material:material", version.ref = "material" }
molecule = { module = "app.cash.molecule:molecule-runtime", version.ref = "molecule" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
preferences-android = { module = "dev.jonpoulton.preferences:android", version.ref = "preferences" }
preferences-core = { module = "dev.jonpoulton.preferences:core", version.ref = "preferences" }
redacted-annotations = { module = "dev.zacsweers.redacted:redacted-compiler-plugin-annotations", version.ref = "redacted" }
slf4j = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-dialect = { module = "app.cash.sqldelight:sqlite-3-38-dialect", version.ref = "sqldelight" }
sqldelight-driver-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-driver-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }
sqldelight-json = { module = "app.cash.sqldelight:sqlite-json-module", version.ref = "sqldelight" }
sqldelight-primitive = { module = "app.cash.sqldelight:primitive-adapters", version.ref = "sqldelight" }
sqldelight-runtime = { module = "app.cash.sqldelight:runtime", version.ref = "sqldelight" }
vico-multiplatform = { module = "com.patrykandpatrick.vico:multiplatform", version.ref = "vico" }

# Testing
test-alakazam-core = { module = "dev.jonpoulton.alakazam:testing-core", version.ref = "alakazam" }
test-alakazam-logging = { module = "dev.jonpoulton.alakazam:testing-logging", version.ref = "alakazam" }
test-alakazam-sqldelight = { module = "dev.jonpoulton.alakazam:testing-sqldelight", version.ref = "alakazam" }
test-androidx-arch = { module = "androidx.arch.core:core-testing", version.ref = "test-androidx-arch" }
test-androidx-compose-ui-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
test-androidx-coreKtx = { module = "androidx.test:core-ktx", version.ref = "test-androidx-coreKtx" }
test-androidx-junit = { module = "androidx.test.ext:junit", version.ref = "test-androidx-junit" }
test-androidx-monitor = { module = "androidx.test:monitor", version.ref = "test-androidx-monitor" }
test-androidx-rules = { module = "androidx.test:rules", version.ref = "test-androidx-rules" }
test-androidx-runner = { module = "androidx.test:runner", version.ref = "test-androidx-runner" }
test-junit = { module = "junit:junit", version.ref = "test-junit" }
test-kotlin-common = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
test-kotlinx-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
test-ktor = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }
test-mockk = { module = "io.mockk:mockk", version.ref = "test-mockk" }
test-robolectric = { module = "org.robolectric:robolectric", version.ref = "test-robolectric" }
test-turbine = { module = "app.cash.turbine:turbine", version.ref = "test-turbine" }

[plugins]
agp-app = { id = "com.android.application", version.ref = "agp" }
agp-lib = { id = "com.android.library", version.ref = "agp" }
androidCacheFix = { id = "org.gradle.android.cache-fix", version.ref = "androidCacheFix" }
buildconfig = { id = "com.github.gmazzo.buildconfig", version.ref = "buildconfig" }
burst = { id = "app.cash.burst", version.ref = "burst" }
catalog = { id = "dev.jonpoulton.catalog", version.ref = "catalog" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }
composeHotReload = { id = "org.jetbrains.compose.hot-reload", version.ref = "composeHotReload" }
dependencyGuard = { id = "com.dropbox.dependency-guard", version.ref = "dependencyGuard" }
dependencyVersions = { id = "com.github.ben-manes.versions", version.ref = "dependencyVersions" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
doctor = { id = "com.osacky.doctor", version.ref = "doctor" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-compose = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-powerAssert = { id = "org.jetbrains.kotlin.plugin.power-assert", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
licensee = { id = "app.cash.licensee", version.ref = "licensee" }
manifestLock = { id = "io.github.gmazzo.android.manifest.lock", version.ref = "manifestLock" }
metro = { id = "dev.zacsweers.metro", version.ref = "metro" }
redacted = { id = "dev.zacsweers.redacted", version.ref = "redacted" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }

convention-android-base = { id = "actual.convention.android.base" }
convention-compose = { id = "actual.convention.compose" }
convention-di = { id = "actual.convention.di" }
convention-diagrams = { id = "actual.convention.diagrams" }
convention-idea = { id = "actual.convention.idea" }
convention-kotlin-jvm = { id = "actual.convention.kotlin.jvm" }
convention-kover = { id = "actual.convention.kover" }
convention-style = { id = "actual.convention.style" }
convention-test = { id = "actual.convention.test" }

module-android = { id = "actual.module.android" }
module-compose = { id = "actual.module.compose" }
module-di = { id = "actual.module.di" }
module-jvm = { id = "actual.module.jvm" }
module-multiplatform = { id = "actual.module.multiplatform" }
module-viewmodel = { id = "actual.module.viewmodel" }
