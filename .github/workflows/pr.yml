name: PR

on:
  pull_request:

env:
  CI: true

permissions:
  contents: write
  checks: write

concurrency:
  group: 'ci-${{ github.event.merge_group.head_ref || github.head_ref }}-${{ github.workflow }}'
  cancel-in-progress: true

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      build: ${{ steps.filter.outputs.build }}
      github: ${{ steps.filter.outputs.github }}
      src: ${{ steps.filter.outputs.src }}
      docs: ${{ steps.filter.outputs.docs }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            github:
              - '.github/**'
            build:
              - '**.kts'
              - '**.properties'
              - '**.conf'
              - 'build-logic/**'
              - 'gradle/**'
            src:
              - '**.kt'
              - '**.kts'
              - '**/src/**'
            docs:
              - '**.md'

  ktlint:
    needs: changes
    if: ${{ needs.changes.outputs.src == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Install ktlint
        run: |
          curl -sSLO https://github.com/pinterest/ktlint/releases/download/1.6.0/ktlint
          chmod a+x ktlint
          sudo mv ktlint /usr/local/bin/

      - name: Run ktlint
        run: scripts/ktlintCheck.sh

  baseline:
    needs: [ changes ]
    if: needs.changes.outputs.build == 'true' && github.event.pull_request.user.login == 'renovate[bot]'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.head_ref }}

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version-file: .github/workflows/.java-version
          distribution: "zulu"

      - name: Add permissions
        run: chmod +x ./gradlew

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary: on-failure

      - name: Run baseline
        run: ./gradlew dependencyGuardBaseline :dependencyGuardBaseline --no-configuration-cache --no-parallel

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v6
        with:
          commit_message: Baseline dependencies

  check:
    needs: [ changes, baseline ]
    if: |
      always() &&
      (needs.changes.outputs.src == 'true' || needs.changes.outputs.build == 'true') &&
      (needs.baseline.result == 'skipped' || needs.baseline.result == 'success')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
          ref: ${{ github.head_ref }}

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          java-version-file: .github/workflows/.java-version
          distribution: "zulu"

      - name: Add permissions
        run: chmod +x ./gradlew

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary: on-failure

      - name: Check
        run: ./gradlew check

      - name: Upload reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: check-reports
          path: |
            ./*/build/reports
            ./build/reports
          if-no-files-found: warn

      - name: Publish test reports
        uses: mikepenz/action-junit-report@v5
        if: always()
        with:
          report_paths: "**/build/test-results/*/TEST-*.xml"
