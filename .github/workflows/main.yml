name: Main

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write
  checks: write

concurrency:
  group: 'ci-${{ github.event.merge_group.head_ref || github.head_ref }}-${{ github.workflow }}'
  cancel-in-progress: true

jobs:
  main-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Gitleaks
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITLEAKS_CONFIG: ./config/gitleaks.toml

      - name: Setup JDK
        uses: actions/setup-java@v5
        with:
          java-version-file: .github/workflows/.java-version
          distribution: "zulu"

      - name: Add permissions
        run: chmod +x ./gradlew

      - name: Set up Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          add-job-summary: on-failure

      - name: Generate test coverage
        shell: bash
        run: |
          COVERAGE=$(./gradlew :koverLog | grep "application line coverage:" | tail -n1 | cut -d ":" -f 2 | tr -d '[:space:]%')
          echo "COVERAGE=$(echo $COVERAGE)" >> $GITHUB_ENV

      - name: Update dynamic badge gist
        uses: schneegans/dynamic-badges-action@v1.7.0
        with:
          auth: ${{ secrets.GIST_SECRET }}
          gistID: 6bf1b7a292bc61bcca966bee22e8b456
          filename: coverage-badge.json
          label: coverage
          message: ${{ env.COVERAGE }}%
          valColorRange: ${{ env.COVERAGE }}
          minColorRange: 0
          maxColorRange: 100

      - name: Publish test reports
        uses: mikepenz/action-junit-report@v5
        if: failure()
        with:
          report_paths: "**/build/test-results/*/TEST-*.xml"
